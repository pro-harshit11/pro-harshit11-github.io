{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book-service.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/routingguard.service.ts","./src/app/user-login/user-logged-in.service.ts","./src/app/user-login/user-login.component.ts","./src/app/user-login/user-login.component.html","./src/app/user-sign-up/user-sign-up.component.ts","./src/app/user-sign-up/user-sign-up.component.html","./src/app/user-sign-up/user-sign-up.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserSignUpComponent } from './user-sign-up/user-sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { MainComponent } from './main/main.component';\nimport { RoutingguardService } from './routingguard.service';\n\n\nconst routes: Routes = [ { path: '',component: MainComponent, children: [\n  {path: '', component:HomeComponent, pathMatch: 'full'},\n  {path:'home',component:HomeComponent\n},{path:'login',component:UserLoginComponent,canActivate:[RoutingguardService]\n },\n \n]}\n,{path:'signUp',component:UserSignUpComponent}\n\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { customer } from './model/customer';\nimport { BookServiceService } from './book-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  \n\n}\n","<div class=\" container-fluid\" class=\"rmg\"><router-outlet ></router-outlet></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserSignUpComponent } from './user-sign-up/user-sign-up.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MainComponent } from './main/main.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserLoginComponent,\n    UserSignUpComponent,\n    MainComponent\n  ],\n  imports: [ReactiveFormsModule,FormsModule,\n    BrowserModule,\n    AppRoutingModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { book } from './model/book';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { customer } from './model/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n\n  constructor(private http: HttpClient) { }\n  private loggedInCustomer = new BehaviorSubject<customer>(JSON.parse(sessionStorage.getItem(\"customer\")));\n  updatedCustomer = this.loggedInCustomer.asObservable();\n\n  updatedCustomerDetails(customer: customer) {\n      this.loggedInCustomer.next(customer);\n  }\n  getbook():Observable<book[]>{\n    return this.http.get<book[]>(\"https://house-books1.herokuapp.com/book/books\")\n    \n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BookServiceService } from '../book-service.service';\nimport { book } from '../model/book';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nlval\n\n\nbranch:string[]=['MECHANICAL','COMPUTER_SCIENCE','ELECTRICAL','CIVIL'];\nselectedbranch:string=\"\";\nsemester:string[]=['SEMESTER1','SEMESTER2','SEMESTER3','SEMESTER4','SEMESTER5','SEMESTER6','SEMESTER7','SEMESTER8']\nselectedSemester:string=\"\";\nbookList:book[];\nbookListPresent:book[];\nerr:string\n\n  constructor(private ser:BookServiceService,private fb:FormBuilder) { }\n\n\n  ngOnInit(): void {\n    this.bookList=null;\n    this.lval=1\n    this.getbook()\n   \n    \n\n  }\n\n\n  getbook(){\n    this.ser.getbook().subscribe(res=>{\n    \n      this.bookList=res \n      console.log(this.bookList)\n      this.bk()\n    },error=>{this.err=error;\n    });\n    \n  }\n  selectedBook(){\n   \n this.bookListPresent=this.bookList.filter(book=>{if(book.branch==this.selectedbranch){\n  if(book.semester==this.selectedSemester) \n  {return true;}\n  \n  \n  }\n  else{return false;}})\n    \n  }\n\n  bk(){\n   \n    this.bookListPresent=this.bookList \n  \n  }\n\n}\n","\n<div class=\"rmg\" *ngIf=\"lval==1\" > \n\n  <div class=\"text-center t\"> \n    <button  class=\"btn btn-border btn-outline-warning text-light\" (click)=\"lval=2\" ><h5> Search Book </h5></button> \n\n</div>\n\n</div>\n<div *ngIf=\"lval==2\" class=\"rmg \"> \n  <div class=\"row container-fluid \">\n  <div class=\"col-md-1 rg\" > \n  <button  class=\"btn btn-border btn-outline-warning text-light\" (click)=\"[lval=1,getbook()]\"  ><h6>  Back</h6></button> \n\n</div>\n<div  class=\"col-md-9 offset-2 row rg\">\n    <div class=\"form-group col-md-4\">\n        <select class=\"form-control\" id=\"branch\"  [(ngModel)]=\"selectedbranch\">\n       \n          <option *ngFor=\"let bran of branch\" [value]=\"bran\">{{bran}}</option>\n          <option  value=\"\" [selected]=\"true\">CHOOSE BRANCH</option>\n        </select>\n    </div>\n    \n\n    <div class=\"form-group col-md-3 offset-1\">\n        <select type=\"text\" class=\"form-control\"  [(ngModel)]=\"selectedSemester\"  >\n\n          <option  value=\"\">CHOOSE SEMESTER</option>\n          <option *ngFor=\"let sem of semester\" [value]=\"sem\">{{sem}}</option>\n          \n        </select>\n       \n    </div>\n   <div class=\"col-md-2 offset-2\"> <button type=\"button\" class=\"btn btn-success text-center\" (click)=\"[selectedBook()] \">SEARCH</button></div>\n\n\n\n</div></div>\n<div class=\"container-fluid  row\">\n  <div class=\"card  mb-3 crd offset-1\" style=\"max-width: 15rem;\" *ngFor=\"let book of bookListPresent\">\n    <div class=\"card-header text-dark\"><h3><strong>{{book.bookName}}</strong></h3></div>\n    <div class=\"card-body crd1\">\n      \n      <p class=\"card-text\">Year Of Publised : {{book.bookYear}}</p>\n      <p class=\"card-text\">Branch: {{book.branch}}</p>\n      <p class=\"card-text\">Semester : {{book.semester}}</p>\n      <p class=\"card-text\">Price : {{book.bookPrice}}</p>\n    \n      <p class=\"card-text\">Seller : {{book.customer.customerName}}</p>\n      <p class=\"card-text\">Contact No : {{book.customer.contactNumber}}</p>\n    \n    </div>\n\n\n  </div>\n  <h5 class=\"error-message\" *ngIf=\"err!=null\">{{err}}</h5> \n\n\n\n\n\n\n\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BookServiceService } from '../book-service.service';\nimport { customer } from '../model/customer';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  title = 'House of Book';\n  cust:customer;\n  constructor(private service:BookServiceService,private router:Router){\n    }\n\n  ngOnInit(): void { \n    this.getLoggedInCustomer()\n }\n getLoggedInCustomer() {\n  this.service.updatedCustomer.subscribe(customer => this.cust = customer);\n  this.cust = JSON.parse(sessionStorage.getItem(\"customer\"));\n}\n\n\n  logOut() {\n    sessionStorage.clear();\n    this.router.navigate([\"\"])\n    this.ngOnInit()\n}\n}\n","<div class=\"rmg\">\r\n    <div >\r\n  \r\n      <nav class=\"navbar navbar-expand-sm  navbar-inverse\" >\r\n        <div class=\"container-fluid\">\r\n          <div class=\"navbar-header\">\r\n            <img src=\"assets\\resource\\favicon.ico\" class=\"img-thumbnail\" width=\"50\" height=\"50\" alt=\"brand image\">\r\n           &nbsp;\r\n            <a class=\"navbar-brand text-light\" href=\" \">HOUSE OF BOOKS</a>\r\n          </div>\r\n        \r\n        <ul class=\"navbar-nav offset-8 \" *ngIf=\"cust==null\">\r\n          <li class=\"nav-item \">\r\n            <a class=\"nav-link text-light\" [routerLink]=\"'/signUp'\">LOGIN / SIGN UP</a>\r\n          </li>\r\n          \r\n        </ul>\r\n        \r\n     \r\n        <ul class=\"navbar-nav\"  *ngIf=\"cust!=null\">\r\n          \r\n          <li class=\"nav-item dropleft\" >\r\n            <a class=\"nav-link dropdown-toggle text-light\" id=\"navbardropdown\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">{{cust.customerName}} </a>\r\n      \r\n            <div class=\"dropdown-menu \" style=\"opacity: 50%;\" aria-labelledby=\"navbardropdown\" > \r\n                <li class=\"dropdown-item\">\r\n                    <a  class=\"nav-link text-dark\" [routerLink]=\"'/login'\">Add /View Books</a>\r\n                </li>\r\n      \r\n                <a (click)=\"logOut()\"><li class=\"dropdown-item text-dark\">\r\n                    Logout\r\n                </li></a>\r\n            </div>\r\n        </li>\r\n      \r\n        \r\n      </ul>\r\n        </div>\r\n    \r\n        \r\n      </nav>\r\n      \r\n      </div>\r\n       \r\n      \r\n      \r\n      <div class=\" container-fluid\"><router-outlet ></router-outlet></div>\r\n    \r\n  </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingguardService  implements CanActivate{\n\n  constructor(private route:Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n\n    let toRet:boolean=false;\n    \n        if(sessionStorage.getItem(\"customer\")!=null){\n            toRet= true;\n        }\n    \n\n    if(toRet){\n        return toRet;\n    }else{\n        alert(\"PLEASE LOGIN TO PROCEED\")\n        this.route.navigate([\"/signUp\"]);\n        return toRet;\n        \n    }\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { book } from '../model/book';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoggedInService {\n\n\n  constructor(private http:HttpClient) { }\n\n  addBook(book:book,customerId:number):Observable<string>{\n  \n    return this.http.post<string>(\"https://house-books1.herokuapp.com/book/book/\"+customerId,book,{ responseType: 'text' as 'json' })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { book } from '../model/book';\nimport { BookServiceService } from '../book-service.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { customer } from '../model/customer';\nimport { UserLoggedInService } from './user-logged-in.service';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\nrval=1;\nbookList:book[];\nerror:string;\nsuccess:string;\nbookform:FormGroup\ncust:customer=null\n  constructor(private router: Router,private service:BookServiceService,private fb:FormBuilder,private userService:UserLoggedInService) { }\n\n  ngOnInit(): void {\n    this.bookList=null\n    this.getbook()\n    this.createbookForm()\n    this.cust=JSON.parse(sessionStorage.getItem(\"customer\"))\n    \n  }\n\n\n\n  createbookForm() {\n \n    this.bookform = this.fb.group({\n      \n      bookName: ['', [Validators.required ]],\n     bookYear: ['', [Validators.required ]],\n     bookPrice: ['', [Validators.required ]],\n      \n       branch: ['', [Validators.required ]],\n       semester: ['', [Validators.required ]],\n\n    });\n  }\n  \nbookForm(){\nthis.userService.addBook(this.bookform.value,this.cust.customerId).subscribe(res=>{\n  this.success=\"Book has been successfully added\"\n  this.getbook()\n \n \n},error=>{this.error=error.error.message;\n\n\n});\n}\ngetbook(){\n  this.service.getbook().subscribe(res=>{\n   \n    this.bookList=res \n    \n   \n  },error=>{this.error=error.error.message;\n  });\n  \n}\n  // logout(){\n  //   sessionStorage.clear();\n  //   this.router.navigate(['/home']);\n  // }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row \">\n    <div class=\"card   crd col-md-2 sidenav content \"  style=\"max-width: 10rem;\">\n     \n      <div class=\"card-body \">\n        \n        <p class=\"card-text\"><strong>  <ul class=\"nav nav-tab nav-stacked \">\n          <li ><strong><h5><a  class=\" active nav-link text-dark\" (click)=\"rval=1\">BOOK</a></h5> </strong></li>\n\n          <li><strong><h5> <a class=\"active nav-link text-dark\" (click)=\"rval=2\">VIEW BOOKS</a></h5> </strong></li>\n      \n        </ul></strong></p>\n        \n      </div>\n  \n  \n    </div> \n    \n    \n<div class=\"col-md-10\" *ngIf=\"rval==1\">\n\n  <div class=\"col-md-5 r offset-3 bg-primary\">\n    \n    <h3 class=\"text-light text-center\"> ADD BOOK </h3>\n \n  <form class=\"form\" [formGroup]=\"bookform\" (ngSubmit)=\"bookForm()\"> <div class=\"form-group\">\n                                       \n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\"  id=\"bookName\" formControlName=\"bookName\" placeholder=\"Book Name\" value=\"\" />\n    </div>\n    <div class=\"form-group\">\n        <input type=\"date\" class=\"form-control\"  id=\" bookYear\" formControlName=\"bookYear\" placeholder=\"Book Year\" value=\"\" />\n    </div>\n    <div class=\"form-group\">\n        <input type=\"number\" class=\"form-control\"  id=\"bookPrice\" formControlName=\"bookPrice\" placeholder=\"Book Price (INR)\" value=\"\" />\n\n    </div>\n    <div class=\"form-group\">\n        <select class=\"form-control\" id=\"branch\" formControlName=\"branch\"  >\n          <option value=\"\">CHOOSE BRANCH</option>\n          <option >MECHANICAL</option>\n          <option >COMPUTER_SCIENCE</option>\n          <option >ELECTRICAL</option>\n          <option >CIVIL</option>\n          \n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <select type=\"text\" class=\"form-control\" placeholder=\"semester*\"  id=\"semester\" formControlName='semester'>\n\n          <option value=\"\" [selected]=\"true\">CHOOSE SEMESTER</option>\n          <option value='SEMESTER1'>1</option>\n          <option value='SEMESTER2'>2</option>\n          <option value='SEMESTER3'>3</option>\n          <option value='SEMESTER4'>4</option>\n          <option value='SEMESTER5'>5</option>\n          <option value='SEMESTER6'>6</option>\n          <option value='SEMESTER7'>7</option>\n          <option value='SEMESTER8'>8</option>\n        \n          \n        </select>\n       \n    </div>\n   <div class=\"text-center\"> <button type=\"submit\" class=\"btn btn-success text-center\">Add Book</button></div>\n\n</div>\n<div><span class=\"text-danger\"><h6>{{success}}</h6></span></div>\n<div><span class=\"text-danger\"><h6>{{error}}</h6></span></div>\n</form></div>\n\n      </div>\n<div class=\"col-md-10 row\" *ngIf=\"rval==2\">\n       \n\n         <div class=\"card text-white mb-2 offset-1 \" style=\"max-width: 18rem; background-color: #aa7398 ;opacity: 65%;\" *ngFor=\"let book of bookList\">\n            <div class=\"card-header\" ><Strong><h3>{{book.bookName}}</h3></Strong></div>\n            <div class=\"card-body\">\n           <strong>\n              <p class=\"card-text\">Year Of Publised : {{book.bookYear}}</p>\n              <p class=\"card-text\">Price : {{book.bookPrice}}</p>\n            \n              <p class=\"card-text\">Seller : {{book.customer.customerName}}</p>\n              <p class=\"card-text\">Contact No : {{book.customer.contactNumber}}</p></strong>   \n            </div>\n      \n       \n          </div>\n          <h6 class=\"text-danger\" *ngIf=\"error!=null\">{{error}}</h6> \n          \n        </div>\n          \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserSignUpService } from './user-sign-up.service';\nimport { Router } from '@angular/router';\nimport { customer } from '../model/customer';\n\n\n@Component({\n  selector: 'app-user-sign-up',\n  templateUrl: './user-sign-up.component.html',\n  styleUrls: ['./user-sign-up.component.css']\n})\nexport class UserSignUpComponent implements OnInit {\n lval=true\n loginForm: FormGroup;\n signUpform:FormGroup\n errorMessage: string;\n\n customer:customer;\n successMessage: string;\n tryToLogin: boolean = false;\n  constructor(private fb:FormBuilder,private service:UserSignUpService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.createLoginForm();\n    this.createSignUpForm();\n    this.customer = JSON.parse(sessionStorage.getItem(\"customer\"));\n  }\n\n  createLoginForm() {\n\n    this.loginForm = this.fb.group({\n      customerId: ['', [Validators.required ]],\n        password: ['', [Validators.required]]\n    });\n}\n\ncreateSignUpForm() {\n  this.signUpform = this.fb.group({\n    customerId: ['', [Validators.required ]],\n    contactNumber:['',[]],\n    customerName: ['', [Validators.required ]],\n     collegeName: ['', [Validators.required ]],\n\n      password: ['', [Validators.required]]\n  });\n}\n\nlogin(){\n  this.customer=null;\n this.errorMessage=null\n this.successMessage=null\n  this.service.login(this.loginForm.value).subscribe(res=>{\n    this.customer = res\n     sessionStorage.setItem(\"customer\", JSON.stringify(this.customer));\n     this.ngOnInit()\n     this.router.navigate(['/login']);\n   \n    \n  },err=>{console.log(err)\n  this.errorMessage=err.error.message})\n}\nsignUp(){\n\n  this.errorMessage=null\n this.successMessage=null\n  this.service.signup(this.signUpform.value).subscribe(res=>{\n    console.log(res)\n   this.successMessage=\"User has been registered successfully\"\n  },err=>{\n  \n    this.successMessage=err.error.text;\n    \n\n    this.errorMessage=err.error.message;\n   \n    })\n\n}\n\n}\n","<div class=\"container r\">\n    <button   class=\"btn btn-border btn-outline-warning text-light\" [routerLink]=\"'/'\"  ><h6>  Home</h6></button>\n<div class=\" register rcorners2 col-md-10 offset-1\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 register-left\">\n                        <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\"/>\n                        <h3>Welcome</h3>\n                        <p><b> To Help The Needy <br>\n                            List The Books</b></p>\n                    </div>\n                    <div class=\"col-md-9 register-right\">\n                        <ul class=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\n                            <li class=\"nav-item\" (click)=\"[lval=true,errorMessage=null,successMessage=null]\">\n                                <a [ngClass]=\"{'nav-link active':lval}\"  >Login</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"[lval=false,errorMessage=null,successMessage=null]\">\n                                <a [ngClass]=\"{'nav-link active' :!lval}\"  >Sign Up</a>\n                            </li>\n                        </ul>\n                        <div class=\"tab-content\" id=\"myTabContent\">\n                            <div class=\"tab-pane fade show active\" *ngIf=\"lval==true\">\n                                <h3 class=\"register-heading\">LOGIN</h3>\n                                <div class=\" row  register-form\">\n                                    <div class=\"col-md-6 offset-3\">\n                                       <form class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\"> \n                                           <div class=\"form-group\">\n                                           \n                                        <label for=\"customerId\">USER ID :</label>\n                                            <input type=\"text\" id=\"customerId\" formControlName=\"customerId\" class=\"form-control\" placeholder=\"User Id *\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"password\">PASSWORD :</label>\n                                            <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password *\" />\n                                        </div>\n                                   \n                                       \n                                        <button type=\"submit\" class=\"btn  btn-primary\">LOGIN</button>\n                                        <br><h6 class=\"text-danger\">{{errorMessage}}</h6>\n                                    </form></div>\n                                  \n                                   \n                                </div>\n                            </div>\n                            <div class=\"tab-pane fade show active\" *ngIf=\"lval==false\">\n                                <h3  class=\"register-heading\">Register </h3>\n                                <div class=\"row register-form\">\n                                    <div class=\"col-md-9 \">\n                                        <form class=\"form\" [formGroup]=\"signUpform\" (ngSubmit)=\"signUp()\"> <div class=\"form-group\">\n                                       \n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\"  id=\"customerName\" formControlName=\"customerName\" placeholder=\"Name *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\"  id=\"collegeName\" formControlName=\"collegeName\" placeholder=\"College Name *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"number\" class=\"form-control\"  id=\"contactNumber\" formControlName=\"contactNumber\" placeholder=\"Phone *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\" id=\"customerId\" formControlName=\"customerId\" placeholder=\"UserId *\" value=\"\" />\n                                        </div>\n                                    <div >\n                                        <div class=\"form-group\">\n                                            <input type=\"password\" class=\"form-control\" placeholder=\"Password *\"  id=\"password\" formControlName='password'/>\n                                        </div>\n                                     \n                                       <button type=\"submit\" class=\"btn btn-success\">Register</button><br>\n                                       <h6 class=\"text-success\">{{successMessage}}</h6>\n                                       <h6 class=\"text-danger\">{{errorMessage}}</h6>\n                                    </div></div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { customer } from '../model/customer';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSignUpService {\n\n  constructor(private http:HttpClient) { }\n\n\n\n  login(cus: customer):Observable<customer>{\n\n  return  this.http.post<customer>(\"https://house-books1.herokuapp.com/book/getUser\",cus)\n  }\n  signup(cus: customer):Observable<customer>{\n    \n  return  this.http.post<customer>(\"https://house-books1.herokuapp.com/book/customers\",cus)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}