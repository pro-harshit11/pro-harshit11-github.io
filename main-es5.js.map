{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book-service.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/routingguard.service.ts","webpack:///src/app/user-login/user-logged-in.service.ts","webpack:///src/app/user-login/user-login.component.ts","webpack:///src/app/user-login/user-login.component.html","webpack:///src/app/user-sign-up/user-sign-up.component.ts","webpack:///src/app/user-sign-up/user-sign-up.component.html","webpack:///src/app/user-sign-up/user-sign-up.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","pathMatch","canActivate","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookServiceService","http","loggedInCustomer","JSON","parse","sessionStorage","getItem","updatedCustomer","asObservable","customer","next","get","providedIn","HomeComponent","ser","fb","branch","selectedbranch","semester","selectedSemester","bookList","lval","getbook","subscribe","res","console","log","bk","error","err","bookListPresent","filter","book","MainComponent","service","router","title","getLoggedInCustomer","cust","clear","navigate","ngOnInit","RoutingguardService","route","state","toRet","alert","UserLoggedInService","customerId","post","responseType","UserLoginComponent","userService","rval","createbookForm","bookform","group","bookName","required","bookYear","bookPrice","addBook","value","success","message","UserSignUpComponent","tryToLogin","createLoginForm","createSignUpForm","loginForm","password","signUpform","contactNumber","customerName","collegeName","errorMessage","successMessage","login","setItem","stringify","signup","text","UserSignUpService","cus","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CAAE;AAAEC,UAAI,EAAE,EAAR;AAAWC,eAAS,EAAE,kEAAtB;AAAqCC,cAAQ,EAAE,CACtE;AAACF,YAAI,EAAE,EAAP;AAAWC,iBAAS,EAAC,kEAArB;AAAoCE,iBAAS,EAAE;AAA/C,OADsE,EAEtE;AAACH,YAAI,EAAC,MAAN;AAAaC,iBAAS,EAAC;AAAvB,OAFsE,EAGtE;AAACD,YAAI,EAAC,OAAN;AAAcC,iBAAS,EAAC,mFAAxB;AAA2CG,mBAAW,EAAC,CAAC,yEAAD;AAAvD,OAHsE;AAA/C,KAAF,EAOtB;AAACJ,UAAI,EAAC,QAAN;AAAeC,eAAS,EAAC;AAAzB,KAPsB,CAAvB;;QAeaI,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBP,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaW,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,0B;AAAA;AAAA;ACXzB;;AAA0C;;AAAgC;;;;;;;;;sEDW7DA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CAAC,kEAAD,EAAqB,0DAArB,EACP,uEADO,EAEP,oEAFO,EAEU,qEAFV,CAII;;;;0HAGFA,S,EAAS;AAAA,uBAblB,2DAakB,EAZlB,kEAYkB,EAXlB,mFAWkB,EAVlB,wFAUkB,EATlB,kEASkB;AATL,kBAEL,kEAFK,EAEe,0DAFf,EAGb,uEAHa,EAIb,oEAJa,EAII,qEAJJ;AASK,O;AALe,K;;;;;sEAKxBA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,mFAHY,EAIZ,wFAJY,EAKZ,kEALY,CADN;AAQRN,iBAAO,EAAE,CAAC,kEAAD,EAAqB,0DAArB,EACP,uEADO,EAEP,oEAFO,EAEU,qEAFV,CARD;AAYRO,mBAAS,EAAE,EAZH;AAaRC,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;;;;;;;;;;;;;;;;AC3BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,kB;AAEX,kCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACZ,aAAAC,gBAAA,GAAmB,IAAI,oDAAJ,CAA8BC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAA9B,CAAnB;AACR,aAAAC,eAAA,GAAkB,KAAKL,gBAAL,CAAsBM,YAAtB,EAAlB;AAFyC;;;;+CAIlBC,Q,EAAoB;AACvC,eAAKP,gBAAL,CAAsBQ,IAAtB,CAA2BD,QAA3B;AACH;;;kCACM;AACL,iBAAO,KAAKR,IAAL,CAAUU,GAAV,CAAsB,+CAAtB,CAAP;AAED;;;;;;;uBAZUX,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVY,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCA;;AAEE;;AACE;;AAA+D;AAAA;;AAAA;;AAAA,+BAAc,CAAd;AAAe,SAAf;;AAAkB;;AAAK;;AAAY;;AAAK;;AAE3G;;AAEA;;;;;;AAWU;;AAAmD;;AAAQ;;;;;;AAAvB;;AAAe;;AAAA;;;;;;AAUnD;;AAAmD;;AAAO;;;;;;AAArB;;AAAc;;AAAA;;;;;;AAW3D;;AACE;;AAAmC;;AAAI;;AAAQ;;AAAiB;;AAAS;;AAAK;;AAC9E;;AAEE;;AAAqB;;AAAoC;;AACzD;;AAAqB;;AAAuB;;AAC5C;;AAAqB;;AAA4B;;AACjD;;AAAqB;;AAA0B;;AAE/C;;AAAqB;;AAAuC;;AAC5D;;AAAqB;;AAA4C;;AAEnE;;AAGF;;;;;;AAdiD;;AAAA;;AAGxB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;;;;;AAMzB;;AAA4C;;AAAO;;;;;;AAAP;;AAAA;;;;;;;;AA/C9C;;AACE;;AACA;;AACA;;AAA+D;AAAA;;AAAA;;AAAA,iCAAe,CAAf,EAAgB,iBAAhB;AAAgB,SAAhB;;AAA+B;;AAAM;;AAAI;;AAAK;;AAE/G;;AACA;;AACI;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAExC;;AACA;;AAAoC;;AAAa;;AACnD;;AACJ;;AAGA;;AACI;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAExC;;AAAkB;;AAAe;;AACjC;;AAEF;;AAEJ;;AACD;;AAAgC;;AAA0D;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AAAS;;AAIxI;;AAAM;;AACN;;AACE;;AAgBA;;AASF;;AACA;;;;;;AAjDkD;;AAAA;;AAEhC;;AAAA;;AACU;;AAAA;;AAMsB;;AAAA;;AAGhC;;AAAA;;AAW+C;;AAAA;;AAgBrC;;AAAA;;;;QD9CfC,a;AAYX,6BAAoBC,GAApB,EAAmDC,EAAnD,EAAmE;AAAA;;AAA/C,aAAAD,GAAA,GAAAA,GAAA;AAA+B,aAAAC,EAAA,GAAAA,EAAA;AARrD,aAAAC,MAAA,GAAgB,CAAC,YAAD,EAAc,kBAAd,EAAiC,YAAjC,EAA8C,OAA9C,CAAhB;AACA,aAAAC,cAAA,GAAsB,EAAtB;AACA,aAAAC,QAAA,GAAkB,CAAC,WAAD,EAAa,WAAb,EAAyB,WAAzB,EAAqC,WAArC,EAAiD,WAAjD,EAA6D,WAA7D,EAAyE,WAAzE,EAAqF,WAArF,CAAlB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AAKwE;;;;mCAG9D;AACN,eAAKC,QAAL,GAAc,IAAd;AACA,eAAKC,IAAL,GAAU,CAAV;AACA,eAAKC,OAAL;AAID;;;kCAGM;AAAA;;AACL,eAAKR,GAAL,CAASQ,OAAT,GAAmBC,SAAnB,CAA6B,UAAAC,GAAG,EAAE;AAEhC,iBAAI,CAACJ,QAAL,GAAcI,GAAd;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAI,CAACN,QAAjB;;AACA,iBAAI,CAACO,EAAL;AACD,WALD,EAKE,UAAAC,KAAK,EAAE;AAAC,iBAAI,CAACC,GAAL,GAASD,KAAT;AACT,WAND;AAQD;;;uCACW;AAAA;;AAEb,eAAKE,eAAL,GAAqB,KAAKV,QAAL,CAAcW,MAAd,CAAqB,UAAAC,IAAI,EAAE;AAAC,gBAAGA,IAAI,CAAChB,MAAL,IAAa,MAAI,CAACC,cAArB,EAAoC;AACpF,kBAAGe,IAAI,CAACd,QAAL,IAAe,MAAI,CAACC,gBAAvB,EACA;AAAC,uBAAO,IAAP;AAAa;AAGb,aAL+C,MAM5C;AAAC,qBAAO,KAAP;AAAc;AAAC,WANA,CAArB;AAQE;;;6BAEC;AAEA,eAAKW,eAAL,GAAqB,KAAKV,QAA1B;AAED;;;;;;;uBAnDUP,a,EAAa,yI,EAAA,2H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,q/B;AAAA;AAAA;ACT1B;;AAQA;;;;AARiB;;AAQZ;;AAAA;;;;;;;;;sEDCQA,a,EAAa;cALzB,uDAKyB;eALf;AACTpB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWQ;;AACE;;AACE;;AAAwD;;AAAe;;AACzE;;AAEF;;;;AAHmC;;AAAA;;;;;;;;AAMnC;;AAEE;;AACE;;AAAkJ;;AAAsB;;AAExK;;AACI;;AACI;;AAAuD;;AAAe;;AAC1E;;AAEA;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAClB;;AACJ;;AAAK;;AACT;;AACJ;;AAGF;;;;;;AAdwJ;;AAAA;;AAI3G;;AAAA;;;;QDhBtCsC,a;AAIX,6BAAoBC,OAApB,EAAuDC,MAAvD,EAAoE;AAAA;;AAAhD,aAAAD,OAAA,GAAAA,OAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAFvD,aAAAC,KAAA,GAAQ,eAAR;AAGG;;;;mCAEK;AACN,eAAKC,mBAAL;AACF;;;8CACqB;AAAA;;AACrB,eAAKH,OAAL,CAAa3B,eAAb,CAA6BgB,SAA7B,CAAuC,UAAAd,QAAQ;AAAA,mBAAI,MAAI,CAAC6B,IAAL,GAAY7B,QAAhB;AAAA,WAA/C;AACA,eAAK6B,IAAL,GAAYnC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAZ;AACD;;;iCAGU;AACPD,wBAAc,CAACkC,KAAf;AACA,eAAKJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,eAAKC,QAAL;AACH;;;;;;;uBApBYR,a,EAAa,yI,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,i3B;AAAA;AAAA;ACV1B;;AACI;;AAEE;;AACE;;AACE;;AACE;;AACD;;AACC;;AAA4C;;AAAc;;AAC5D;;AAEF;;AAQA;;AAkBA;;AAGF;;AAEA;;AAIA;;AAA8B;;AAAgC;;AAElE;;;;AArCuC;;AAAA;;AAQT;;AAAA;;;;;;;;;sEDTnBA,a,EAAa;cALzB,uDAKyB;eALf;AACTxC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+C,mB;AAEX,mCAAoBC,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AAAiB;;;;oCACzBA,K,EAA+BC,K,EAA0B;AAEnE,cAAIC,KAAK,GAAS,KAAlB;;AAEI,cAAGxC,cAAc,CAACC,OAAf,CAAuB,UAAvB,KAAoC,IAAvC,EAA4C;AACxCuC,iBAAK,GAAE,IAAP;AACH;;AAGL,cAAGA,KAAH,EAAS;AACL,mBAAOA,KAAP;AACH,WAFD,MAEK;AACDC,iBAAK,CAAC,yBAAD,CAAL;AACA,iBAAKH,KAAL,CAAWH,QAAX,CAAoB,CAAC,SAAD,CAApB;AACA,mBAAOK,KAAP;AAEH;AACJ;;;;;;;uBApBYH,mB,EAAmB,8G;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACV9B,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQamC,mB;AAGX,mCAAoB9C,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;gCAEhC+B,I,EAAUgB,U,EAAiB;AAEjC,iBAAO,KAAK/C,IAAL,CAAUgD,IAAV,CAAuB,kDAAgDD,UAAvE,EAAkFhB,IAAlF,EAAuF;AAAEkB,wBAAY,EAAE;AAAhB,WAAvF,CAAP;AACD;;;;;;;uBARUH,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVnC,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmBA;;AAEE;;AAEE;;AAAoC;;AAAS;;AAE/C;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAEjE;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AACE;;AAAiB;;AAAa;;AAC9B;;AAAS;;AAAU;;AACnB;;AAAS;;AAAgB;;AACzB;;AAAS;;AAAU;;AACnB;;AAAS;;AAAK;;AAEhB;;AACJ;;AAEA;;AACI;;AAEE;;AAAmC;;AAAe;;AAClD;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAC3B;;AAA0B;;AAAC;;AAG7B;;AAEJ;;AACD;;AAA0B;;AAA0D;;AAAQ;;AAAS;;AAExG;;AACA;;AAAK;;AAA0B;;AAAI;;AAAW;;AAAK;;AAAO;;AAC1D;;AAAK;;AAA0B;;AAAI;;AAAS;;AAAK;;AAAO;;AACxD;;AAAO;;AAED;;;;;;AA/Ce;;AAAA;;AA0BM;;AAAA;;AAiBQ;;AAAA;;AACA;;AAAA;;;;;;AAO1B;;AACG;;AAA0B;;AAAQ;;AAAI;;AAAiB;;AAAK;;AAAS;;AACrE;;AACD;;AACG;;AAAqB;;AAAoC;;AACzD;;AAAqB;;AAA0B;;AAE/C;;AAAqB;;AAAuC;;AAC5D;;AAAqB;;AAA4C;;AAAI;;AACvE;;AAGF;;;;;;AAXwC;;AAAA;;AAGf;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;;;;;AAKzB;;AAA4C;;AAAS;;;;;;AAAT;;AAAA;;;;;;AAhBtD;;AAGS;;AAaC;;AAEF;;;;;;AAfgH;;AAAA;;AAatF;;AAAA;;;;QD3ErBuC,kB;AAOX,kCAAoBhB,MAApB,EAA2CD,OAA3C,EAA8EnB,EAA9E,EAAqGqC,WAArG,EAAsI;AAAA;;AAAlH,aAAAjB,MAAA,GAAAA,MAAA;AAAuB,aAAAD,OAAA,GAAAA,OAAA;AAAmC,aAAAnB,EAAA,GAAAA,EAAA;AAAuB,aAAAqC,WAAA,GAAAA,WAAA;AANvG,aAAAC,IAAA,GAAK,CAAL;AAKA,aAAAf,IAAA,GAAc,IAAd;AAC2I;;;;mCAEjI;AACN,eAAKlB,QAAL,GAAc,IAAd;AACA,eAAKE,OAAL;AACA,eAAKgC,cAAL;AACA,eAAKhB,IAAL,GAAUnC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAV;AAED;;;yCAIgB;AAEf,eAAKiD,QAAL,GAAgB,KAAKxC,EAAL,CAAQyC,KAAR,CAAc;AAE5BC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CAFkB;AAG7BC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAHmB;AAI7BE,qBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL,CAJkB;AAM3B1C,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW0C,QAAZ,CAAL,CANmB;AAO3BxC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWwC,QAAZ,CAAL;AAPiB,WAAd,CAAhB;AAUD;;;mCAEK;AAAA;;AACR,eAAKN,WAAL,CAAiBS,OAAjB,CAAyB,KAAKN,QAAL,CAAcO,KAAvC,EAA6C,KAAKxB,IAAL,CAAUU,UAAvD,EAAmEzB,SAAnE,CAA6E,UAAAC,GAAG,EAAE;AAChF,kBAAI,CAACuC,OAAL,GAAa,kCAAb;;AACA,kBAAI,CAACzC,OAAL;AAGD,WALD,EAKE,UAAAM,KAAK,EAAE;AAAC,kBAAI,CAACA,KAAL,GAAWA,KAAK,CAACA,KAAN,CAAYoC,OAAvB;AAGT,WARD;AASC;;;kCACM;AAAA;;AACL,eAAK9B,OAAL,CAAaZ,OAAb,GAAuBC,SAAvB,CAAiC,UAAAC,GAAG,EAAE;AAEpC,kBAAI,CAACJ,QAAL,GAAcI,GAAd;AAGD,WALD,EAKE,UAAAI,KAAK,EAAE;AAAC,kBAAI,CAACA,KAAL,GAAWA,KAAK,CAACA,KAAN,CAAYoC,OAAvB;AACT,WAND;AAQD;;;;;;;uBArDYb,kB,EAAkB,uH,EAAA,yI,EAAA,2H,EAAA,4I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,6sD;AAAA;AAAA;ACd/B;;AACE;;AACE;;AAEE;;AAEE;;AAAqB;;AAAU;;AAC7B;;AAAK;;AAAQ;;AAAI;;AAAuC;AAAA,8BAAc,CAAd;AAAe,WAAf;;AAAiB;;AAAI;;AAAI;;AAAM;;AAAS;;AAEhG;;AAAI;;AAAQ;;AAAK;;AAAqC;AAAA,8BAAc,CAAd;AAAe,WAAf;;AAAiB;;AAAU;;AAAI;;AAAM;;AAAS;;AAEtG;;AAAK;;AAAS;;AAEhB;;AAGF;;AAGJ;;AAsDA;;AAoBA;;AA7FA;;;;AAmBuB;;AAAA;;AAsDI;;AAAA;;;;;;;;;sED3DdA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT1D,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoB4B;;AACI;;AAA6B;;AAAK;;AAClC;;AACI;;AACG;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAEH;;AAAwB;;AAAS;;AAC7B;;AACJ;;AACA;;AACI;;AAAsB;;AAAU;;AAChC;;AACJ;;AAGA;;AAA+C;;AAAK;;AACpD;;AAAI;;AAAwB;;AAAgB;;AAChD;;AAAO;;AAGX;;AACJ;;;;;;AAlB8B;;AAAA;;AAaU;;AAAA;;;;;;;;AAMxC;;AACI;;AAA8B;;AAAS;;AACvC;;AACI;;AACI;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAEnE;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACI;;AACI;;AACJ;;AAED;;AAA8C;;AAAQ;;AAAS;;AAC/D;;AAAyB;;AAAkB;;AAC3C;;AAAwB;;AAAgB;;AAC3C;;AAAM;;AACV;;AACJ;;AACJ;;AACJ;;;;;;AA1BuC;;AAAA;;AAoBK;;AAAA;;AACD;;AAAA;;;;;;;;;;QDxDlDsE,mB;AASX,mCAAoBlD,EAApB,EAA2CmB,OAA3C,EAA6EC,MAA7E,EAA6F;AAAA;;AAAzE,aAAApB,EAAA,GAAAA,EAAA;AAAuB,aAAAmB,OAAA,GAAAA,OAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAR9E,aAAAd,IAAA,GAAK,IAAL;AAOA,aAAA6C,UAAA,GAAsB,KAAtB;AACiG;;;;mCAExF;AACN,eAAKC,eAAL;AACA,eAAKC,gBAAL;AACA,eAAK3D,QAAL,GAAgBN,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAhB;AACD;;;0CAEiB;AAEhB,eAAK+D,SAAL,GAAiB,KAAKtD,EAAL,CAAQyC,KAAR,CAAc;AAC7BR,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWU,QAAZ,CAAL,CADiB;AAE3BY,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWZ,QAAZ,CAAL;AAFiB,WAAd,CAAjB;AAIH;;;2CAEkB;AACjB,eAAKa,UAAL,GAAkB,KAAKxD,EAAL,CAAQyC,KAAR,CAAc;AAC9BR,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWU,QAAZ,CAAL,CADkB;AAE9Bc,yBAAa,EAAC,CAAC,EAAD,EAAI,EAAJ,CAFgB;AAG9BC,wBAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWf,QAAZ,CAAL,CAHgB;AAI7BgB,uBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWhB,QAAZ,CAAL,CAJgB;AAM5BY,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWZ,QAAZ,CAAL;AANkB,WAAd,CAAlB;AAQD;;;gCAEI;AAAA;;AACH,eAAKjD,QAAL,GAAc,IAAd;AACD,eAAKkE,YAAL,GAAkB,IAAlB;AACA,eAAKC,cAAL,GAAoB,IAApB;AACC,eAAK1C,OAAL,CAAa2C,KAAb,CAAmB,KAAKR,SAAL,CAAeP,KAAlC,EAAyCvC,SAAzC,CAAmD,UAAAC,GAAG,EAAE;AACtD,kBAAI,CAACf,QAAL,GAAgBe,GAAhB;AACCnB,0BAAc,CAACyE,OAAf,CAAuB,UAAvB,EAAmC3E,IAAI,CAAC4E,SAAL,CAAe,MAAI,CAACtE,QAApB,CAAnC;;AACA,kBAAI,CAACgC,QAAL;;AACA,kBAAI,CAACN,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB;AAGF,WAPD,EAOE,UAAAX,GAAG,EAAE;AAACJ,mBAAO,CAACC,GAAR,CAAYG,GAAZ;AACR,kBAAI,CAAC8C,YAAL,GAAkB9C,GAAG,CAACD,KAAJ,CAAUoC,OAA5B;AAAoC,WARpC;AASD;;;iCACK;AAAA;;AAEJ,eAAKW,YAAL,GAAkB,IAAlB;AACD,eAAKC,cAAL,GAAoB,IAApB;AACC,eAAK1C,OAAL,CAAa8C,MAAb,CAAoB,KAAKT,UAAL,CAAgBT,KAApC,EAA2CvC,SAA3C,CAAqD,UAAAC,GAAG,EAAE;AACxDC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,kBAAI,CAACoD,cAAL,GAAoB,uCAApB;AACA,WAHD,EAGE,UAAA/C,GAAG,EAAE;AAEL,kBAAI,CAAC+C,cAAL,GAAoB/C,GAAG,CAACD,KAAJ,CAAUqD,IAA9B;AAGA,kBAAI,CAACN,YAAL,GAAkB9C,GAAG,CAACD,KAAJ,CAAUoC,OAA5B;AAEC,WAVH;AAYD;;;;;;;uBAlEYC,mB,EAAmB,2H,EAAA,wI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,uC;AAAA,e;AAAA,a;AAAA,2wD;AAAA;AAAA;ACZhC;;AACI;;AAAqF;;AAAM;;AAAI;;AAAK;;AACxG;;AACgB;;AACI;;AACI;;AACA;;AAAI;;AAAO;;AACX;;AAAG;;AAAI;;AAAkB;;AACrB;;AAAc;;AAAI;;AAC1B;;AACA;;AACI;;AACI;;AAAqB;AAAA,+BAAe,IAAf,EAAmB,mBAAc,IAAjC,EAAqC,qBAAgB,IAArD;AAAyD,WAAzD;;AACjB;;AAA0C;;AAAK;;AACnD;;AACA;;AAAqB;AAAA,+BAAe,KAAf,EAAoB,mBAAc,IAAlC,EAAsC,qBAAgB,IAAtD;AAA0D,WAA1D;;AACjB;;AAA4C;;AAAO;;AACvD;;AACJ;;AACA;;AACI;;AAuBA;;AA+BZ;;AACJ;;AAxEI;;AADhB;;AAFA;;;;AACoE;;AAAA;;AAYjC;;AAAA;;AAGA;;AAAA;;AAIgC;;AAAA;;AAuBA;;AAAA;;;;;;;;;sED/BtDA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTxE,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQauF,iB;AAEX,iCAAoBjF,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;8BAIlCkF,G,EAAa;AAEnB,iBAAQ,KAAKlF,IAAL,CAAUgD,IAAV,CAAyB,iDAAzB,EAA2EkC,GAA3E,CAAR;AACC;;;+BACMA,G,EAAa;AAEpB,iBAAQ,KAAKlF,IAAL,CAAUgD,IAAV,CAAyB,mDAAzB,EAA6EkC,GAA7E,CAAR;AACC;;;;;;;uBAbUD,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVtE,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAzD,GAAG;AAAA,aAAIJ,OAAO,CAACG,KAAR,CAAcC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserSignUpComponent } from './user-sign-up/user-sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { MainComponent } from './main/main.component';\nimport { RoutingguardService } from './routingguard.service';\n\n\nconst routes: Routes = [ { path: '',component: MainComponent, children: [\n  {path: '', component:HomeComponent, pathMatch: 'full'},\n  {path:'home',component:HomeComponent\n},{path:'login',component:UserLoginComponent,canActivate:[RoutingguardService]\n },\n \n]}\n,{path:'signUp',component:UserSignUpComponent}\n\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { customer } from './model/customer';\nimport { BookServiceService } from './book-service.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  \n\n}\n","<div class=\" container-fluid\" class=\"rmg\"><router-outlet ></router-outlet></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserSignUpComponent } from './user-sign-up/user-sign-up.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MainComponent } from './main/main.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserLoginComponent,\n    UserSignUpComponent,\n    MainComponent\n  ],\n  imports: [ReactiveFormsModule,FormsModule,\n    BrowserModule,\n    AppRoutingModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { book } from './model/book';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { customer } from './model/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n\n  constructor(private http: HttpClient) { }\n  private loggedInCustomer = new BehaviorSubject<customer>(JSON.parse(sessionStorage.getItem(\"customer\")));\n  updatedCustomer = this.loggedInCustomer.asObservable();\n\n  updatedCustomerDetails(customer: customer) {\n      this.loggedInCustomer.next(customer);\n  }\n  getbook():Observable<book[]>{\n    return this.http.get<book[]>(\"https://house-books1.herokuapp.com/book/books\")\n    \n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BookServiceService } from '../book-service.service';\nimport { book } from '../model/book';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nlval\n\n\nbranch:string[]=['MECHANICAL','COMPUTER_SCIENCE','ELECTRICAL','CIVIL'];\nselectedbranch:string=\"\";\nsemester:string[]=['SEMESTER1','SEMESTER2','SEMESTER3','SEMESTER4','SEMESTER5','SEMESTER6','SEMESTER7','SEMESTER8']\nselectedSemester:string=\"\";\nbookList:book[];\nbookListPresent:book[];\nerr:string\n\n  constructor(private ser:BookServiceService,private fb:FormBuilder) { }\n\n\n  ngOnInit(): void {\n    this.bookList=null;\n    this.lval=1\n    this.getbook()\n   \n    \n\n  }\n\n\n  getbook(){\n    this.ser.getbook().subscribe(res=>{\n    \n      this.bookList=res \n      console.log(this.bookList)\n      this.bk()\n    },error=>{this.err=error;\n    });\n    \n  }\n  selectedBook(){\n   \n this.bookListPresent=this.bookList.filter(book=>{if(book.branch==this.selectedbranch){\n  if(book.semester==this.selectedSemester) \n  {return true;}\n  \n  \n  }\n  else{return false;}})\n    \n  }\n\n  bk(){\n   \n    this.bookListPresent=this.bookList \n  \n  }\n\n}\n","\n<div class=\"rmg\" *ngIf=\"lval==1\" > \n\n  <div class=\"text-center t\"> \n    <button  class=\"btn btn-border btn-outline-warning text-light\" (click)=\"lval=2\" ><h5> Search Book </h5></button> \n\n</div>\n\n</div>\n<div *ngIf=\"lval==2\" class=\"rmg \"> \n  <div class=\"row container-fluid \">\n  <div class=\"col-md-1 rg\" > \n  <button  class=\"btn btn-border btn-outline-warning text-light\" (click)=\"[lval=1,getbook()]\"  ><h6>  Back</h6></button> \n\n</div>\n<div  class=\"col-md-9 offset-2 row rg\">\n    <div class=\"form-group col-md-4\">\n        <select class=\"form-control\" id=\"branch\"  [(ngModel)]=\"selectedbranch\">\n       \n          <option *ngFor=\"let bran of branch\" [value]=\"bran\">{{bran}}</option>\n          <option  value=\"\" [selected]=\"true\">CHOOSE BRANCH</option>\n        </select>\n    </div>\n    \n\n    <div class=\"form-group col-md-3 offset-1\">\n        <select type=\"text\" class=\"form-control\"  [(ngModel)]=\"selectedSemester\"  >\n\n          <option  value=\"\">CHOOSE SEMESTER</option>\n          <option *ngFor=\"let sem of semester\" [value]=\"sem\">{{sem}}</option>\n          \n        </select>\n       \n    </div>\n   <div class=\"col-md-2 offset-2\"> <button type=\"button\" class=\"btn btn-success text-center\" (click)=\"[selectedBook()] \">SEARCH</button></div>\n\n\n\n</div></div>\n<div class=\"container-fluid  row\">\n  <div class=\"card  mb-3 crd offset-1\" style=\"max-width: 15rem;\" *ngFor=\"let book of bookListPresent\">\n    <div class=\"card-header text-dark\"><h3><strong>{{book.bookName}}</strong></h3></div>\n    <div class=\"card-body crd1\">\n      \n      <p class=\"card-text\">Year Of Publised : {{book.bookYear}}</p>\n      <p class=\"card-text\">Branch: {{book.branch}}</p>\n      <p class=\"card-text\">Semester : {{book.semester}}</p>\n      <p class=\"card-text\">Price : {{book.bookPrice}}</p>\n    \n      <p class=\"card-text\">Seller : {{book.customer.customerName}}</p>\n      <p class=\"card-text\">Contact No : {{book.customer.contactNumber}}</p>\n    \n    </div>\n\n\n  </div>\n  <h5 class=\"error-message\" *ngIf=\"err!=null\">{{err}}</h5> \n\n\n\n\n\n\n\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BookServiceService } from '../book-service.service';\nimport { customer } from '../model/customer';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  title = 'House of Book';\n  cust:customer;\n  constructor(private service:BookServiceService,private router:Router){\n    }\n\n  ngOnInit(): void { \n    this.getLoggedInCustomer()\n }\n getLoggedInCustomer() {\n  this.service.updatedCustomer.subscribe(customer => this.cust = customer);\n  this.cust = JSON.parse(sessionStorage.getItem(\"customer\"));\n}\n\n\n  logOut() {\n    sessionStorage.clear();\n    this.router.navigate([\"\"])\n    this.ngOnInit()\n}\n}\n","<div class=\"rmg\">\r\n    <div >\r\n  \r\n      <nav class=\"navbar navbar-expand-sm  navbar-inverse\" >\r\n        <div class=\"container-fluid\">\r\n          <div class=\"navbar-header\">\r\n            <img src=\"assets\\resource\\favicon.ico\" class=\"img-thumbnail\" width=\"50\" height=\"50\" alt=\"brand image\">\r\n           &nbsp;\r\n            <a class=\"navbar-brand text-light\" href=\" \">HOUSE OF BOOKS</a>\r\n          </div>\r\n        \r\n        <ul class=\"navbar-nav offset-8 \" *ngIf=\"cust==null\">\r\n          <li class=\"nav-item \">\r\n            <a class=\"nav-link text-light\" [routerLink]=\"'/signUp'\">LOGIN / SIGN UP</a>\r\n          </li>\r\n          \r\n        </ul>\r\n        \r\n     \r\n        <ul class=\"navbar-nav\"  *ngIf=\"cust!=null\">\r\n          \r\n          <li class=\"nav-item dropleft\" >\r\n            <a class=\"nav-link dropdown-toggle text-light\" id=\"navbardropdown\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">{{cust.customerName}} </a>\r\n      \r\n            <div class=\"dropdown-menu \" style=\"opacity: 50%;\" aria-labelledby=\"navbardropdown\" > \r\n                <li class=\"dropdown-item\">\r\n                    <a  class=\"nav-link text-dark\" [routerLink]=\"'/login'\">Add /View Books</a>\r\n                </li>\r\n      \r\n                <a (click)=\"logOut()\"><li class=\"dropdown-item text-dark\">\r\n                    Logout\r\n                </li></a>\r\n            </div>\r\n        </li>\r\n      \r\n        \r\n      </ul>\r\n        </div>\r\n    \r\n        \r\n      </nav>\r\n      \r\n      </div>\r\n       \r\n      \r\n      \r\n      <div class=\" container-fluid\"><router-outlet ></router-outlet></div>\r\n    \r\n  </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingguardService  implements CanActivate{\n\n  constructor(private route:Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n\n    let toRet:boolean=false;\n    \n        if(sessionStorage.getItem(\"customer\")!=null){\n            toRet= true;\n        }\n    \n\n    if(toRet){\n        return toRet;\n    }else{\n        alert(\"PLEASE LOGIN TO PROCEED\")\n        this.route.navigate([\"/signUp\"]);\n        return toRet;\n        \n    }\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { book } from '../model/book';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoggedInService {\n\n\n  constructor(private http:HttpClient) { }\n\n  addBook(book:book,customerId:number):Observable<string>{\n  \n    return this.http.post<string>(\"https://house-books1.herokuapp.com/book/book/\"+customerId,book,{ responseType: 'text' as 'json' })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { book } from '../model/book';\nimport { BookServiceService } from '../book-service.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { customer } from '../model/customer';\nimport { UserLoggedInService } from './user-logged-in.service';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\nrval=1;\nbookList:book[];\nerror:string;\nsuccess:string;\nbookform:FormGroup\ncust:customer=null\n  constructor(private router: Router,private service:BookServiceService,private fb:FormBuilder,private userService:UserLoggedInService) { }\n\n  ngOnInit(): void {\n    this.bookList=null\n    this.getbook()\n    this.createbookForm()\n    this.cust=JSON.parse(sessionStorage.getItem(\"customer\"))\n    \n  }\n\n\n\n  createbookForm() {\n \n    this.bookform = this.fb.group({\n      \n      bookName: ['', [Validators.required ]],\n     bookYear: ['', [Validators.required ]],\n     bookPrice: ['', [Validators.required ]],\n      \n       branch: ['', [Validators.required ]],\n       semester: ['', [Validators.required ]],\n\n    });\n  }\n  \nbookForm(){\nthis.userService.addBook(this.bookform.value,this.cust.customerId).subscribe(res=>{\n  this.success=\"Book has been successfully added\"\n  this.getbook()\n \n \n},error=>{this.error=error.error.message;\n\n\n});\n}\ngetbook(){\n  this.service.getbook().subscribe(res=>{\n   \n    this.bookList=res \n    \n   \n  },error=>{this.error=error.error.message;\n  });\n  \n}\n  // logout(){\n  //   sessionStorage.clear();\n  //   this.router.navigate(['/home']);\n  // }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row \">\n    <div class=\"card   crd col-md-2 sidenav content \"  style=\"max-width: 10rem;\">\n     \n      <div class=\"card-body \">\n        \n        <p class=\"card-text\"><strong>  <ul class=\"nav nav-tab nav-stacked \">\n          <li ><strong><h5><a  class=\" active nav-link text-dark\" (click)=\"rval=1\">BOOK</a></h5> </strong></li>\n\n          <li><strong><h5> <a class=\"active nav-link text-dark\" (click)=\"rval=2\">VIEW BOOKS</a></h5> </strong></li>\n      \n        </ul></strong></p>\n        \n      </div>\n  \n  \n    </div> \n    \n    \n<div class=\"col-md-10\" *ngIf=\"rval==1\">\n\n  <div class=\"col-md-5 r offset-3 bg-primary\">\n    \n    <h3 class=\"text-light text-center\"> ADD BOOK </h3>\n \n  <form class=\"form\" [formGroup]=\"bookform\" (ngSubmit)=\"bookForm()\"> <div class=\"form-group\">\n                                       \n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\"  id=\"bookName\" formControlName=\"bookName\" placeholder=\"Book Name\" value=\"\" />\n    </div>\n    <div class=\"form-group\">\n        <input type=\"date\" class=\"form-control\"  id=\" bookYear\" formControlName=\"bookYear\" placeholder=\"Book Year\" value=\"\" />\n    </div>\n    <div class=\"form-group\">\n        <input type=\"number\" class=\"form-control\"  id=\"bookPrice\" formControlName=\"bookPrice\" placeholder=\"Book Price (INR)\" value=\"\" />\n\n    </div>\n    <div class=\"form-group\">\n        <select class=\"form-control\" id=\"branch\" formControlName=\"branch\"  >\n          <option value=\"\">CHOOSE BRANCH</option>\n          <option >MECHANICAL</option>\n          <option >COMPUTER_SCIENCE</option>\n          <option >ELECTRICAL</option>\n          <option >CIVIL</option>\n          \n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <select type=\"text\" class=\"form-control\" placeholder=\"semester*\"  id=\"semester\" formControlName='semester'>\n\n          <option value=\"\" [selected]=\"true\">CHOOSE SEMESTER</option>\n          <option value='SEMESTER1'>1</option>\n          <option value='SEMESTER2'>2</option>\n          <option value='SEMESTER3'>3</option>\n          <option value='SEMESTER4'>4</option>\n          <option value='SEMESTER5'>5</option>\n          <option value='SEMESTER6'>6</option>\n          <option value='SEMESTER7'>7</option>\n          <option value='SEMESTER8'>8</option>\n        \n          \n        </select>\n       \n    </div>\n   <div class=\"text-center\"> <button type=\"submit\" class=\"btn btn-success text-center\">Add Book</button></div>\n\n</div>\n<div><span class=\"text-danger\"><h6>{{success}}</h6></span></div>\n<div><span class=\"text-danger\"><h6>{{error}}</h6></span></div>\n</form></div>\n\n      </div>\n<div class=\"col-md-10 row\" *ngIf=\"rval==2\">\n       \n\n         <div class=\"card text-white mb-2 offset-1 \" style=\"max-width: 18rem; background-color: #aa7398 ;opacity: 65%;\" *ngFor=\"let book of bookList\">\n            <div class=\"card-header\" ><Strong><h3>{{book.bookName}}</h3></Strong></div>\n            <div class=\"card-body\">\n           <strong>\n              <p class=\"card-text\">Year Of Publised : {{book.bookYear}}</p>\n              <p class=\"card-text\">Price : {{book.bookPrice}}</p>\n            \n              <p class=\"card-text\">Seller : {{book.customer.customerName}}</p>\n              <p class=\"card-text\">Contact No : {{book.customer.contactNumber}}</p></strong>   \n            </div>\n      \n       \n          </div>\n          <h6 class=\"text-danger\" *ngIf=\"error!=null\">{{error}}</h6> \n          \n        </div>\n          \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserSignUpService } from './user-sign-up.service';\nimport { Router } from '@angular/router';\nimport { customer } from '../model/customer';\n\n\n@Component({\n  selector: 'app-user-sign-up',\n  templateUrl: './user-sign-up.component.html',\n  styleUrls: ['./user-sign-up.component.css']\n})\nexport class UserSignUpComponent implements OnInit {\n lval=true\n loginForm: FormGroup;\n signUpform:FormGroup\n errorMessage: string;\n\n customer:customer;\n successMessage: string;\n tryToLogin: boolean = false;\n  constructor(private fb:FormBuilder,private service:UserSignUpService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.createLoginForm();\n    this.createSignUpForm();\n    this.customer = JSON.parse(sessionStorage.getItem(\"customer\"));\n  }\n\n  createLoginForm() {\n\n    this.loginForm = this.fb.group({\n      customerId: ['', [Validators.required ]],\n        password: ['', [Validators.required]]\n    });\n}\n\ncreateSignUpForm() {\n  this.signUpform = this.fb.group({\n    customerId: ['', [Validators.required ]],\n    contactNumber:['',[]],\n    customerName: ['', [Validators.required ]],\n     collegeName: ['', [Validators.required ]],\n\n      password: ['', [Validators.required]]\n  });\n}\n\nlogin(){\n  this.customer=null;\n this.errorMessage=null\n this.successMessage=null\n  this.service.login(this.loginForm.value).subscribe(res=>{\n    this.customer = res\n     sessionStorage.setItem(\"customer\", JSON.stringify(this.customer));\n     this.ngOnInit()\n     this.router.navigate(['/login']);\n   \n    \n  },err=>{console.log(err)\n  this.errorMessage=err.error.message})\n}\nsignUp(){\n\n  this.errorMessage=null\n this.successMessage=null\n  this.service.signup(this.signUpform.value).subscribe(res=>{\n    console.log(res)\n   this.successMessage=\"User has been registered successfully\"\n  },err=>{\n  \n    this.successMessage=err.error.text;\n    \n\n    this.errorMessage=err.error.message;\n   \n    })\n\n}\n\n}\n","<div class=\"container r\">\n    <button   class=\"btn btn-border btn-outline-warning text-light\" [routerLink]=\"'/'\"  ><h6>  Home</h6></button>\n<div class=\" register rcorners2 col-md-10 offset-1\">\n                <div class=\"row\">\n                    <div class=\"col-md-3 register-left\">\n                        <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\"/>\n                        <h3>Welcome</h3>\n                        <p><b> To Help The Needy <br>\n                            List The Books</b></p>\n                    </div>\n                    <div class=\"col-md-9 register-right\">\n                        <ul class=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\n                            <li class=\"nav-item\" (click)=\"[lval=true,errorMessage=null,successMessage=null]\">\n                                <a [ngClass]=\"{'nav-link active':lval}\"  >Login</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"[lval=false,errorMessage=null,successMessage=null]\">\n                                <a [ngClass]=\"{'nav-link active' :!lval}\"  >Sign Up</a>\n                            </li>\n                        </ul>\n                        <div class=\"tab-content\" id=\"myTabContent\">\n                            <div class=\"tab-pane fade show active\" *ngIf=\"lval==true\">\n                                <h3 class=\"register-heading\">LOGIN</h3>\n                                <div class=\" row  register-form\">\n                                    <div class=\"col-md-6 offset-3\">\n                                       <form class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\"> \n                                           <div class=\"form-group\">\n                                           \n                                        <label for=\"customerId\">USER ID :</label>\n                                            <input type=\"text\" id=\"customerId\" formControlName=\"customerId\" class=\"form-control\" placeholder=\"User Id *\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label for=\"password\">PASSWORD :</label>\n                                            <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password *\" />\n                                        </div>\n                                   \n                                       \n                                        <button type=\"submit\" class=\"btn  btn-primary\">LOGIN</button>\n                                        <br><h6 class=\"text-danger\">{{errorMessage}}</h6>\n                                    </form></div>\n                                  \n                                   \n                                </div>\n                            </div>\n                            <div class=\"tab-pane fade show active\" *ngIf=\"lval==false\">\n                                <h3  class=\"register-heading\">Register </h3>\n                                <div class=\"row register-form\">\n                                    <div class=\"col-md-9 \">\n                                        <form class=\"form\" [formGroup]=\"signUpform\" (ngSubmit)=\"signUp()\"> <div class=\"form-group\">\n                                       \n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\"  id=\"customerName\" formControlName=\"customerName\" placeholder=\"Name *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\"  id=\"collegeName\" formControlName=\"collegeName\" placeholder=\"College Name *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"number\" class=\"form-control\"  id=\"contactNumber\" formControlName=\"contactNumber\" placeholder=\"Phone *\" value=\"\" />\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\" id=\"customerId\" formControlName=\"customerId\" placeholder=\"UserId *\" value=\"\" />\n                                        </div>\n                                    <div >\n                                        <div class=\"form-group\">\n                                            <input type=\"password\" class=\"form-control\" placeholder=\"Password *\"  id=\"password\" formControlName='password'/>\n                                        </div>\n                                     \n                                       <button type=\"submit\" class=\"btn btn-success\">Register</button><br>\n                                       <h6 class=\"text-success\">{{successMessage}}</h6>\n                                       <h6 class=\"text-danger\">{{errorMessage}}</h6>\n                                    </div></div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { customer } from '../model/customer';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSignUpService {\n\n  constructor(private http:HttpClient) { }\n\n\n\n  login(cus: customer):Observable<customer>{\n\n  return  this.http.post<customer>(\"https://house-books1.herokuapp.com/book/getUser\",cus)\n  }\n  signup(cus: customer):Observable<customer>{\n    \n  return  this.http.post<customer>(\"https://house-books1.herokuapp.com/book/customers\",cus)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}